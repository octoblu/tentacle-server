#!/bin/bash

SCRIPT_DIR=`dirname $0`
DISTRIBUTION_DIR=`dirname $SCRIPT_DIR`

export PATH=/usr/local/bin:$PATH

BLUE_PORT=`AWS_DEFAULT_REGION=us-west-2 aws elb describe-tags --load-balancer-name tentacle-server | jq '.TagDescriptions[0].Tags[] | select(.Key == "blue") | .Value | tonumber'`
GREEN_PORT=`AWS_DEFAULT_REGION=us-west-2 aws elb describe-tags --load-balancer-name tentacle-server | jq '.TagDescriptions[0].Tags[] | select(.Key == "green") | .Value | tonumber'`

OLD_PORT=`AWS_DEFAULT_REGION=us-west-2 aws elb describe-load-balancers --load-balancer-name tentacle-server | jq '.LoadBalancerDescriptions[0].ListenerDescriptions[0].Listener.InstancePort'`

NEW_COLOR=blue
NEW_PORT=${BLUE_PORT}
if [ "${OLD_PORT}" == "${BLUE_PORT}" ]; then
  NEW_COLOR=green
  NEW_PORT=${GREEN_PORT}
fi

export BLUE_PORT GREEN_PORT OLD_PORT NEW_COLOR NEW_PORT

REPLACE_REGEX='s;(\\*)(\$([a-zA-Z_][a-zA-Z_0-9]*)|\$\{([a-zA-Z_][a-zA-Z_0-9]*)\})?;substr($1,0,int(length($1)/2)).($2&&length($1)%2?$2:$ENV{$3||$4});eg'
perl -pe $REPLACE_REGEX $SCRIPT_DIR/tentacle-server-blue-service.yaml.tmpl > $SCRIPT_DIR/tentacle-server-blue-service.yaml
perl -pe $REPLACE_REGEX $SCRIPT_DIR/tentacle-server-green-service.yaml.tmpl > $SCRIPT_DIR/tentacle-server-green-service.yaml

kubectl delete -f $SCRIPT_DIR/tentacle-server-${NEW_COLOR}-service.yaml
kubectl create -f $SCRIPT_DIR/tentacle-server-${NEW_COLOR}-service.yaml

kubectl stop rc -lname=tentacle-server-${NEW_COLOR}
kubectl delete rc -lname=tentacle-server-${NEW_COLOR}
kubectl delete pods -lname=tentacle-server-${NEW_COLOR}
kubectl create -f $SCRIPT_DIR/tentacle-server-${NEW_COLOR}-controller.yaml

x=0
while [ "$x" -lt 20 -a -z "$KUBE_STATUS" ]; do
   x=$((x+1))
   sleep 10
   echo "Checking kubectl status, attempt ${x}..."
   KUBE_STATUS=`kubectl get pod -o json -lname=tentacle-server-${NEW_COLOR} | jq ".items[].currentState.info[\"tentacle-server-${NEW_COLOR}\"].ready" | uniq | grep true`
done

if [ -z "$KUBE_STATUS" ]; then
  echo "tentacle-server-${NEW_COLOR} is not ready, giving up."
  exit 1
fi

AWS_DEFAULT_REGION=us-west-2 aws elb delete-load-balancer-listeners --load-balancer-name tentacle-server --load-balancer-ports 80
AWS_DEFAULT_REGION=us-west-2 aws elb create-load-balancer-listeners --load-balancer-name tentacle-server --listeners Protocol=TCP,LoadBalancerPort=80,InstanceProtocol=TCP,InstancePort=${NEW_PORT}

AWS_DEFAULT_REGION=us-west-2 aws elb configure-health-check --load-balancer-name tentacle-server --health-check Target=TCP:${NEW_PORT},Interval=30,Timeout=5,UnhealthyThreshold=2,HealthyThreshold=2
